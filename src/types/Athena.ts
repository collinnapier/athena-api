export interface AthenaPatientRecord {
  address1: string;
  address2: string;
  agriculturalworker: string;
  agriculturalworkertype: string;
  allpatientstatuses: Array<{
    departmentid: number;
    primaryproviderid: string;
    status: string;
  }>;
  altfirstname: string;
  assignedsexatbirth: string;
  balances: Array<{
    balance: string;
    cleanbalance: string;
    collectionsbalance: string;
    contracts: Array<{
      availablebalance: string;
      contractclass: string;
      maxamount: string;
    }>;
    departmentlist: string;
    paymentplanbalance: string;
    providergroupid: number;
  }>;
  caresummarydeliverypreference: string;
  city: string;
  claimbalancedetails: Array<{
    claimdetails: Array<{
      amount: number;
      chargeleveldetail: Array<{
        amount: number;
        description: string;
        id: number;
        procedurecode: string;
        procedurecodeothermodifier: string;
        procedurecodesubmitted: string;
        servicedate: string;
        transactions: Array<{
          amount: number;
          date: string;
          description: number;
          epaymentid: number;
          id: number;
          transfertype: string;
          type: string;
        }>;
      }>;
      claimid: number;
      cleanbalance: string;
      departmentid: number;
      patientbalance: number;
      servicedate: string;
      supervisingproviderid: number;
    }>;
    departmentids: string;
    providergroupid: number;
  }>;
  confidentialitycode: string;
  consenttocall: string;
  consenttotext: string;
  contacthomephone: string;
  contactmobilephone: string;
  contactname: string;
  contactpreference: string;
  contactpreference_announcement_email: string;
  contactpreference_announcement_phone: string;
  contactpreference_announcement_sms: string;
  contactpreference_appointment_email: string;
  contactpreference_appointment_phone: string;
  contactpreference_appointment_sms: string;
  contactpreference_billing_email: string;
  contactpreference_billing_phone: string;
  contactpreference_billing_sms: string;
  contactpreference_lab_email: string;
  contactpreference_lab_phone: string;
  contactpreference_lab_sms: string;
  contactrelationship: string;
  countrycode: "USA";
  countrycode3166: "US";
  customfields: Array<{
    customfieldid: string;
    customfieldvalue: string;
    optionid: string;
  }>;
  deceaseddate: string;
  defaultpharmacyncpdpid: string;
  departmentid: string;
  dob: string;
  donotcallyn: string;
  driverslicenseexpirationdate: string;
  driverslicensenumber: string;
  driverslicensestateid: string;
  driverslicenseurl: string;
  driverslicenseyn: boolean;
  email: string;
  emailexistsyn: string;
  employeraddress: string;
  employercity: string;
  employerfax: string;
  employerid: string;
  employername: string;
  employerphone: string;
  employerstate: string;
  employerzip: string;
  ethnicitycode: string;
  ethnicitycodes: string;
  firstappointment: string;
  firstname: string;
  genderidentity: string;
  genderidentityother: string;
  guarantoraddress1: string;
  guarantoraddress2: string;
  guarantoraddresssameaspatient: boolean;
  guarantorcity: string;
  guarantorcountrycode: "USA";
  guarantorcountrycode3166: "US";
  guarantordob: string;
  guarantoremail: string;
  guarantoremployerid: string;
  guarantorfirstname: string;
  guarantorlastname: string;
  guarantormiddlename: string;
  guarantorphone: string;
  guarantorrelationshiptopatient: string;
  guarantorssn: string;
  guarantorstate: string;
  guarantorsuffix: string;
  guarantorzip: string;
  guardianfirstname: string;
  guardianlastname: string;
  guardianmiddlename: string;
  guardiansuffix: string;
  hasmobileyn: string;
  homeboundyn: string;
  homeless: string;
  homelesstype: string;
  homephone: string;
  industrycode: string;
  insurances: Array<{
    adjusterfax: string;
    adjusterfirstname: string;
    adjusterlastname: string;
    adjusterphone: string;
    anotherpartyresponsibleyn: string;
    autoaccidentstate: string;
    cancelled: string;
    cancelledby: string;
    caseinjurydate: string;
    casepolicytypename: string;
    ccmstatusid: number;
    ccmstatusname: string;
    coinsurancepercent: number;
    confidentialitycode: string;
    copays: Array<{
      copayamount: string;
      copaytype: number;
    }>;
    coveragetype: Array<{
      coveragetypecode: number;
      coveragetypedescription: string;
    }>;
    created: string;
    createdby: string;
    deletednote: string;
    descriptionofinjury: string;
    eligibilitylastchecked: string;
    eligibilitymessage: string;
    eligibilityreason: string;
    eligibilitystatus: string;
    employerid: string;
    expirationdate: string;
    icd10codes: string[];
    icd9codes: number[];
    injuredbodypart: string;
    insuranceclaimnumber: string;
    insuranceid: string;
    insuranceidnumber: string;
    insurancepackageaddress1: string;
    insurancepackageaddress2: string;
    insurancepackagecity: string;
    insurancepackageid: number;
    insurancepackagepayerid: string;
    insurancepackagestate: string;
    insurancepackagezip: string;
    insurancepayername: string;
    insurancephone: string;
    insuranceplandisplayname: string;
    insuranceplanname: string;
    insurancepolicyholder: string;
    insurancepolicyholderaddress1: string;
    insurancepolicyholderaddress2: string;
    insurancepolicyholdercity: string;
    insurancepolicyholdercountrycode: string;
    insurancepolicyholdercountryiso3166: string;
    insurancepolicyholderdob: string;
    insurancepolicyholderfirstname: string;
    insurancepolicyholderlastname: string;
    insurancepolicyholdermiddlename: string;
    insurancepolicyholdersex: string;
    insurancepolicyholderssn: string;
    insurancepolicyholderstate: string;
    insurancepolicyholdersuffix: string;
    insurancepolicyholderzip: string;
    insuranceproducttype: string;
    insurancetype: string;
    insuredentitytypeid: number;
    insuredidnumber: string;
    insuredpcp: string;
    insuredpcpnpi: number;
    insuredreferringprovider: string;
    ircid: number;
    ircname: string;
    issuedate: string;
    lastupdated: string;
    lastupdatedby: string;
    note: string;
    packageexpirationdate: string;
    paymentplanid: number;
    pendinginsurancepackageid: number;
    policynumber: string;
    relatedtoautoaccidentyn: string;
    relatedtoemploymentyn: string;
    relatedtootheraccidentyn: string;
    relationshiptoinsured: "Self" | string;
    relationshiptoinsuredid: number;
    repricername: string;
    repricerphone: string;
    sequencenumber: number;
    slidingfeeplanid: number;
    stateofreportedinjury: string;
  }>;
  language6392code: string;
  lastappointment: string;
  lastemail: string;
  lastname: string;
  lastupdated: string;
  lastupdatedby: string;
  localpatientid: string;
  maritalstatus: string;
  maritalstatusname: string;
  medicationhistoryconsentverified: string;
  middlename: string;
  mobilecarrierid: string;
  mobilephone: string;
  nextkinname: string;
  nextkinphone: string;
  nextkinrelationship: string;
  notes: string;
  occupationcode: string;
  onlinestatementonlyyn: string;
  patientid: string;
  patientphotourl: string;
  patientphotoyn: boolean;
  portalaccessgiven: string;
  portalsignatureonfile: boolean;
  portalstatus: Array<{
    blockedfailedloginsyn: string;
    entitytodisplay: string;
    familyblockedfailedloginsyn: string;
    familyregisteredyn: string;
    lastlogindate: string;
    lastloginentity: string;
    noportalyn: string;
    portalregistrationdate: string;
    registeredyn: string;
    status: string;
    termsaccepted: boolean;
  }>;
  portaltermsonfile: boolean;
  povertylevelcalculated: number;
  povertylevelfamilysize: string;
  povertylevelfamilysizedeclined: string;
  povertylevelincomedeclined: string;
  povertylevelincomepayperiod: string;
  povertylevelincomeperpayperiod: string;
  povertylevelincomerangedeclined: string;
  preferredname: string;
  preferredpronouns: string;
  previouspatientids: number[];
  primarydepartmentid: string;
  primaryproviderid: string;
  privacyinformationverified: boolean;
  publichousing: string;
  race: string;
  racecode: string;
  racename: string;
  referralsourceid: string;
  referralsourceother: string;
  registrationdate: string;
  schoolbasedhealthcenter: string;
  sex: string;
  sexualorientation: string;
  sexualorientationother: string;
  smsoptindate: string;
  ssn: string;
  state: string;
  status: "a";
  suffix: string;
  veteran: string;
  workphone: string;
  zip: string;
}

export interface AthenaPatientMedications {
  lastdownloaddenialreason: string;
  lastdownloaddenied: boolean; // Treating empty string as boolean
  lastdownloadeddate: string;
  lastupdated: string;
  medications: Array<{
    approvedby: string;
    billingndc: string;
    createdby: string;
    earliestfilldate: string;
    encounterid: number;
    events: Array<{
      eventdate: string;
      type: string;
      userdisplayname: string;
    }>;
    filldate: string;
    futuresubmitdate: string;
    isdiscontinued: boolean; // Treating empty string as boolean
    issafetorenew: boolean; // Treating empty string as boolean
    isstructuredsig: boolean; // Treating empty string as boolean
    medication: string;
    medicationentryid: string;
    medicationid: number;
    ndcoptions: Array<{
      ndcoption: string;
    }>;
    newindicator: string;
    orderingmode: string;
    organclass: string;
    patientnote: string;
    pharmacy: string;
    pharmacyncpdpid: string;
    prescribedby: string;
    providernote: string;
    quantity: number;
    quantityunit: string;
    refillsallowed: number;
    route: string;
    rxnorm: Array<{
      rxnormidentifier: string;
    }>;
    source: string;
    status: string;
    stopreason: string;
    structuredsig: Array<{
      dosageaction: string;
      dosageadditionalinstructions: string;
      dosagedurationunit: string;
      dosagedurationvalue: number;
      dosagefrequencydescription: string;
      dosagefrequencyunit: string;
      dosagefrequencyvalue: number;
      dosagequantityunit: string;
      dosagequantityvalue: number;
      dosageroute: string;
    }>;
    therapeuticclass: string;
    unstructuredsig: string;
  }>;
  nomedicationsreported: boolean; // Treating empty string as boolean
  patientdownloadconsent: boolean; // Treating empty string as boolean
  patientneedsdownloadconsent: boolean; // Treating empty string as boolean
  sectionnote: string;
}
